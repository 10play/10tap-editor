"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[696],{5988:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"Introduction","href":"/10tap-editor/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Main Concept","href":"/10tap-editor/docs/mainConcepts","docId":"mainConcepts","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Setup","items":[{"type":"link","label":"Installation","href":"/10tap-editor/docs/setup/installation","docId":"setup/installation","unlisted":false},{"type":"link","label":"Advanced Setup","href":"/10tap-editor/docs/setup/advancedSetup","docId":"setup/advancedSetup","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API","items":[{"type":"link","label":"useEditorBridge","href":"/10tap-editor/docs/api/useEditorBridge","docId":"api/useEditorBridge","unlisted":false},{"type":"link","label":"EditorBridge","href":"/10tap-editor/docs/api/EditorBridge","docId":"api/EditorBridge","unlisted":false},{"type":"link","label":"RichText","href":"/10tap-editor/docs/api/RichText","docId":"api/RichText","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"examples","items":[{"type":"link","label":"Basic example","href":"/10tap-editor/docs/examples/basic","docId":"examples/basic","unlisted":false},{"type":"link","label":"Custom CSS and Fonts","href":"/10tap-editor/docs/examples/customCss","docId":"examples/customCss","unlisted":false},{"type":"link","label":"Configure Extensions","href":"/10tap-editor/docs/examples/configureExtensions","docId":"examples/configureExtensions","unlisted":false},{"type":"link","label":"Using The ColorKeyboard","href":"/10tap-editor/docs/examples/colorKeyboard","docId":"examples/colorKeyboard","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api/EditorBridge":{"id":"api/EditorBridge","title":"EditorBridge","description":"interface of all the interactions you can do with the editor on the react native side, can be extendable with BrideExtension, with tentapStarterkit enable (also when simple usage) the EditorBridge will have:","sidebar":"tutorialSidebar"},"api/RichText":{"id":"api/RichText","title":"RichText","description":"a react component that will render the webview editor, help to locate the editor wherever you wold like, inside a view that stick to your keyboard for example see chat example","sidebar":"tutorialSidebar"},"api/useEditorBridge":{"id":"api/useEditorBridge","title":"useEditorBridge","description":"a react hook that will return EditorBridge","sidebar":"tutorialSidebar"},"examples/basic":{"id":"examples/basic","title":"Basic example","description":"In this example we will be creating a basic editor that contains all of the pre-built bridgeExtensions and a keyboard aware toolbar. Jump To Full Example","sidebar":"tutorialSidebar"},"examples/colorKeyboard":{"id":"examples/colorKeyboard","title":"Using The ColorKeyboard","description":"In this example we will add the ColorKeyboard, and a custom button to toggle it in the Toolbar","sidebar":"tutorialSidebar"},"examples/configureExtensions":{"id":"examples/configureExtensions","title":"Configure Extensions","description":"In this example we will configure some extensions. Each bridge comes with the configureExtension function, that configures it\'s underline tiptap extension.","sidebar":"tutorialSidebar"},"examples/customCss":{"id":"examples/customCss","title":"Custom CSS and Fonts","description":"In this example we will be adding custom css and fonts","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"TenTap is a typed, easy to use, customizable, and extendable Rich Text editor for React-Native based on Tiptap and Prosemirror. It offers a \\"plug and play\\" experience and comes with many essential features out of the box that can be incorporated into your apps quickly. Additionally, TenTap allows you the developers to tailor the editor to your applications specific needs. TenTap is based on TipTap and Prosemirror which are well known and trusted open source RichText libraries.","sidebar":"tutorialSidebar"},"mainConcepts":{"id":"mainConcepts","title":"Main Concept","description":"EditorBridge - the react native way to control the webview editor, will extend by bridgeExtensions","sidebar":"tutorialSidebar"},"setup/advancedSetup":{"id":"setup/advancedSetup","title":"Advanced Setup","description":"Make sure you read the core concepts page before setup advance and check if the simple usage is good enough for you.","sidebar":"tutorialSidebar"},"setup/installation":{"id":"setup/installation","title":"Installation","description":"1. yarn add @10play/tentap-editor react-native-webview","sidebar":"tutorialSidebar"}}}')}}]);