"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64],{6588:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>x,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=i(7624),o=i(2172);const s={sidebar_position:3},r="Configuring and Extending Extensions",a={id:"examples/configureExtensions",title:"Configuring and Extending Extensions",description:"In this example we will configure some extensions. Each bridge comes with the configureExtension function, that configures it's underline tiptap extension.",source:"@site/docs/examples/configureExtensions.md",sourceDirName:"examples",slug:"/examples/configureExtensions",permalink:"/10tap-editor/docs/examples/configureExtensions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Formatting keyboard",permalink:"/10tap-editor/docs/examples/fonts"},next:{title:"Using The ColorKeyboard",permalink:"/10tap-editor/docs/examples/colorKeyboard"}},d={},c=[{value:"Configuring Placeholder and Link",id:"configuring-placeholder-and-link",level:2},{value:"Extending Extension and updating Document Schema",id:"extending-extension-and-updating-document-schema",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configuring-and-extending-extensions",children:"Configuring and Extending Extensions"}),"\n",(0,t.jsxs)(n.p,{children:["In this example we will configure some extensions. Each bridge comes with the ",(0,t.jsx)(n.code,{children:"configureExtension"})," function, that configures it's underline tiptap extension.\nFor full list of available configurations for each bridge please see ",(0,t.jsx)(n.a,{href:"/10tap-editor/docs/api/BridgeExtensions",children:"BridgeExtensions"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"configuring-placeholder-and-link",children:"Configuring Placeholder and Link"}),"\n",(0,t.jsxs)(n.p,{children:["First we can check which options are available to extend on the tiptap docs. Links to them are available ",(0,t.jsx)(n.a,{href:"/10tap-editor/docs/api/BridgeExtensions",children:"here"}),"\nIn our case let's extend the placeholder to show custom text, and the link extension to not open links when clicking them"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const editor = useEditorBridge({\n    bridgeExtensions: [\n        ...,\n        PlaceholderBridge.configureExtension({\n          placeholder: 'Type something...',\n        }),\n        LinkBridge.configureExtension({ openOnClick: false }),\n    ],\n  });\n"})}),"\n",(0,t.jsx)(n.h2,{id:"extending-extension-and-updating-document-schema",children:"Extending Extension and updating Document Schema"}),"\n",(0,t.jsxs)(n.p,{children:["We can also extend the main ",(0,t.jsx)(n.code,{children:"tiptapExtension"})," of each bridge with ",(0,t.jsx)(n.code,{children:"extendExtension"}),".\nLet's say we want to update the Document extension of the CoreBridge to mandate a ",(0,t.jsx)(n.code,{children:"heading"})," as the first node:"]}),"\n",(0,t.jsx)(n.p,{children:"We could do"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"CoreBridge.extendExtension({ content: 'heading block+' });\n"})}),"\n",(0,t.jsx)(n.p,{children:'Now the Document extension will be configured to have a heading node first followed by one or many "blocks"'})]})}function x(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},2172:(e,n,i)=>{i.d(n,{I:()=>a,M:()=>r});var t=i(1504);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);